---
// Component Imports
import MainHead from '../components/MainHead.astro';
import Nav from '../components/Nav.astro';
import Footer from '../components/Footer.astro';
import PortfolioPreview from '../components/PortfolioPreview.astro';
import type { Project } from '../types';

// Data Fetching: List all Markdown posts in the repo.
const projects = await Astro.glob<Project>('./project/**/*.md');
const featuredProject = projects[0]!;

// Full Astro Component Syntax:
// https://docs.astro.build/core-concepts/astro-components/
---

<html lang="en">
	<head>
		<MainHead
			title="Daria Ree: Personal Site"
			description="Daria Ree: Developer, Musician, and Writer..."
		/>
		<style>
			.wrapper {
				margin-top: 2em;
				margin-bottom: 2em;
			}

			.hero {
				position: relative;
				overflow: hidden;
			}

			@media (min-width: 750px) {
				.hero {
					height: 45vw;
				}
			}

			.img {
				display: block;
				width: 100%;
				height: auto;
			}

			.gradient,
			.gradient2 {
				background-image: url('/assets/mesh-gradient.jpg');
				background-size: cover;
				pointer-events: none;
				mix-blend-mode: screen;
				width: 100%;
				height: 100%;
				position: absolute;
				top: 0;
				left: 0;
				z-index: 2;
			}

			.gradient2 {
				mix-blend-mode: multiply;
				background-size: cover;
			}

			.overlay {
				position: absolute;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
				z-index: 10;
				display: flex;
				flex-direction: column;
				align-items: flex-start;
				justify-content: center;
				padding-left: 2rem;
			}

			@media (min-width: 750px) {
				.overlay {
					padding-left: 4rem;
				}
			}

			.title {
				font-weight: 900;
				font-size: var(--f-u6);
				margin-bottom: 0.5rem;
				margin-top: 0;
			}

			@media (min-width: 750px) {
				.title {
					font-size: var(--f-u12);
				}
			}

			.grid {
				display: grid;
				grid-gap: 2rem;
			}

			@media (min-width: 1200px) {
				.grid {
					grid-template-columns: 2fr 1fr;
				}
			}

			.sectionTitle {
				font-weight: 700;
				font-size: var(--f-u8);
				margin-top: 4rem;
				margin-bottom: 2rem;
			}

			.roles {
				display: flex;
				flex-wrap: wrap;
				gap: 0.5em;
				font-size: var(--f-d1);
			}

			.role {
				position: relative;
				display: inline-block;
				white-space: nowrap;
				font-weight: 900;
				color: var(--t-bg);
				background-color: var(--t-fg);
				padding: 0.25em 0.5em;
				z-index: 2;
			}

			@media (min-width: 750px) {
				.role {
					font-size: var(--f-u3);
				}
			}

			.role:nth-of-type(1) .invert {
				background-color: var(--c-pink);
			}

			.role:nth-of-type(2) .invert {
				background-color: var(--c-blue);
			}

			.role:nth-of-type(3) .invert {
				background-color: var(--c-green);
			}

			.role:hover .invert {
				clip-path: polygon(0% 0%, 100% 0%, 100% 100%, 0% 100%);
			}

			.invert {
				position: absolute;
				color: var(--t-fg);
				display: flex;
				align-items: center;
				justify-content: center;
				width: 100%;
				height: 100%;
				top: 0;
				left: 0;
				pointer-events: none;
				clip-path: polygon(0% 100%, 100% 100%, 100% 200%, 0% 200%);
				transition: clip-path cubic-bezier(0.4, 0, 0.5, 1) 150ms;
			}

			.desc {
				font-size: var(--f-u1);
				margin-top: 1.5rem;
				margin-bottom: 0;
			}

			.subtitle {
				display: block;
				font-weight: 400;
				font-size: var(--f-d6);
				letter-spacing: -0.0625em;
			}

			.bio {
				line-height: 2;
				margin-bottom: 2rem;
			}

			.bio > span:first-of-type {
				line-height: 1;
				margin-bottom: 0.5em;
				display: block;
				font-weight: 700;
				font-size: var(--f-u4);
			}

			.buttonContainer {
				text-align: center;
				margin-top: 2em;
			}

			.rick {
				position: absolute;
				top: 223px;
				left: 700px;
				z-index: 10;
			}

			.eye {
				position: absolute;
				z-index: 100;
			}
		</style>
	</head>
	<body>
		<Nav />
		<header class="hero">
			<img width="350" height="40" 
			class="rick" id="rick" src="/assets/rick.png"/>
			<div class="eyes">
				<img width="18" height="40" class="eye" src="/assets/eye.png" style="top: 398px;
    left: 810px;"/>
				<img width="18" height="40" class="eye" src="/assets/eye.png" style="top: 391px;
    left: 850px;"/>
			</div>
			<div class="gradient"></div>
			<div class="gradient2"></div>
			<div class="overlay">
				<h1 class="title">
					<small class="subtitle">Hi my name is</small>Daria Ree
				</h1>
				<div class="roles">
					<span class="role">👩‍💻 Developer <span class="invert">👩‍💻 Developer</span></span>
					<span class="role">🎤 Musician <span class="invert">🎤 Musician</span></span>
					<span class="role">✏️ Ecoactivist <span class="invert">✏️ Ecoactivist</span></span>
				</div>
				<p class="desc">Lover of dogs, roadtrips, and poetry.</p>
			</div>
		</header>
		<main class="wrapper">
			<div class="grid">
				<div class="section">
					<h3 class="sectionTitle">Selected Work</h3>
					<PortfolioPreview project={featuredProject} />
					<div class="buttonContainer">
						<a href="/projects/" class="button">View All</a>
					</div>
				</div>
				<div class="section">
					<h3 class="sectionTitle">About me</h3>
					<p class="bio">
						<span>Hello!</span> I’m Jeanine, and this is my website. It was made using{' '}
						<a href="https://github.com/withastro/astro" target="_blank" rel="nofollow"> Astro</a>,
						a new way to build static sites. This is just an example template for you to modify.
					</p>
					<p>
						<a href="/about">Read more</a>
					</p>
				</div>
			</div>
		</main>
		<Footer />
	</body>
	<script>
		document.addEventListener('mousemove', (e) => {
			const mouseX = e.clientX
			const mouseY = e.clientY

			const rickImg = document.getElementById('rick')
			const rekt = rickImg?.getBoundingClientRect()

			const anchorX = rekt?.left + rekt?.width / 2
			const anchorY = rekt?.top + rekt?.height / 2

			// console.log(rickImg)
			const angleDeg = angle(mouseX, mouseY, anchorX, anchorY)
			console.log(angleDeg)

			const eyes = document.querySelectorAll('.eye');
			eyes.forEach(eye => {
				eye.style.transform = `rotate(${90 + angleDeg}deg)`
			})
		})

		function angle(cx, cy, ex, ey) {
			const dy = ey - cy;
			const dx = ex - cx;
			const rad = Math.atan2(dy, dx);

			const deg = rad * 180 / Math.PI;
			return deg
		}
	</script>
</html>
